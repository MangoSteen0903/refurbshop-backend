// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  username   String   @unique
  location   String?
  name       String
  password   String
  profileImg String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isOwner    Boolean
  Store      Store[]
  Wishlist   Like[]
  Review     Review[]
}

model Store {
  id           Int      @id @default(autoincrement())
  name         String
  location     String
  roadAddress  String
  jibunAddress String
  description  String?
  bannerImg    String?
  profileImg   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  Item         Item[]
  Review       Review[]
}

model Item {
  id          Int      @id @default(autoincrement())
  name        String
  price       Int
  description String?
  image       String?
  limitDate   String
  amount      Int      @default(0)
  store       Store    @relation(fields: [storeId], references: [id])
  storeId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Like        Like[]
  Review      Review[]
}

model Like {
  id        Int      @id @default(autoincrement())
  item      Item     @relation(fields: [itemId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  itemId    Int
  userId    Int

  @@unique([itemId, userId])
}

model Review {
  id        Int      @id @default(autoincrement())
  context   String
  rate      Float
  image     String?
  user      User     @relation(fields: [userId], references: [id])
  item      Item     @relation(fields: [itemId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  itemId    Int
  storeId   Int
}
